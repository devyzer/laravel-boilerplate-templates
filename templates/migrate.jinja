<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class Create{{data['migrateName']}}Table extends Migration
{
    /**
    * Run the migrations.
    *
    * @return void
    */

    public function up()
    {
        Schema::create('{{data['tableName']}}', function (Blueprint $table) { {% if data['count'](data['columns'])%} {% for item in data['columns'] %} {% if item['name']=="id" or item['name']=="Id"  %}
            $table->{{item['dbtype']}}('id'); {% elif item['dbtype']=="enum" %}
            $table->{{item['dbtype']}}('{{item['name']}}',[{% for key,el in item['selected_data'].items()%}  '{{key}}',{% endfor %}]){% if item['serverStoreRules']['required']!="required"%}->nullable(){% endif %} {% if 'default' in item %}{% if item['dbtype']=="string"%}->default('{{item['default']}}'){%else%}->default({{item['default']}}){% endif %}{% endif %} ; {% elif item['dbtype']=="rememberToken"  %}
            $table->rememberToken(); {% else %}
            $table->{{item['dbtype']}}('{{item['name']}}'{%for extra_value in item['extraDbValues']%},{{extra_value}}{%endfor%}){% if item['serverStoreRules']['required']!="required"%}->nullable(){% endif %}  {% if 'default' in item %}{% if item['dbtype']=="string"%}->default('{{item['default']}}'){%else%}->default({{item['default']}}){% endif %}{% endif %} ; {% endif %} {% endfor %} {% endif %}
            {% if data['count'](data['unique'])%}{% for item in data['unique'] %}
            $table->unique('{{item['name']}}'); {% endfor %} {% endif %}{%if data['timestamp']%}
            $table->timestamps();{% endif %}{% if data['count'](data['sluggable'])%}
            $table->string('slug');{% endif %} {% if data['hasSoftDelete']%}
            $table->softDeletes();{% endif %}{% if data['count'](data['sluggable'])%}
            $table->unique('slug');{% endif %}

            {% if data['count'](data['foreign'])%}{% for item in data['foreign'] %}
            $table->foreign('{{item['field_name']}}')
            ->references('{{item['related_field']}}')
            ->on('{{item['table']}}')
            ->onDelete('cascade');{% endfor %} {% endif %}

     });
    }
    /**
    * Reverse the migrations.
    *
    * @return void
    */
    public function down()
    {
         Schema::dropIfExists('{{data['tableName']}}');
    }

}


