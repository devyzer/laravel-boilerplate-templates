<?php

namespace {{data['namespaces']['currentEntity']['apiControllers']}}\{{data['modelName']}};

use {{data['namespaces']['global']['controllers']}}\Controller;
use {{data['namespaces']['currentEntity']['models']}}\{{data['modelName']}};
use Illuminate\Http\Request;

/**
 * Class {{data['modelName']}}Controller.
 */
 /** @OA\Info(title="{{data['slug']}} API", version="0.1") */
class {{data['modelName']}}Controller extends Controller
{
    /**
     * @OA\Get(
     * path="api/{{data['modelVariable']}}",
     * summary="Get All {{data['modelName']}}s",
     * description="Show All {{data['modelName']}}s",
     * operationId="getAll{{data['modelName']}}s",
     * tags={"{{data['modelName']}}"},
     * @OA\Response(
     *    response=200,
     *    description="Returns when {{data['modelName']}} are found",
     *    @OA\JsonContent(
     *     @OA\Items(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *       @OA\Property(property="deleted_at", type="string", example="null"),
     *       @OA\Property(property="created_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *       @OA\Property(property="updated_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *    )
     * )
     * )
     * )
     */
    public function index()
    {
        return {{data['modelName']}}::all();
    }



    /**
     * @OA\Get(
     * path="api/{{data['modelVariable']}}/{id}",
     * summary="Get {{data['modelName']}} by id",
     * description="Show one {{data['modelName']}} by id",
     * operationId="getOne{{data['modelName']}}s",
     * tags={"{{data['modelVariable']}}"},
     * @OA\Parameter(
     *    description="ID of {{data['modelVariable']}}",
     *    in="path",
     *    name="id",
     *    required=true,
     *    example="1",
     * ),
     * @OA\Response(
     *    response=404,
     *    description="Returns when {{data['modelVariable']}} id is not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="Resource not found"),
     *    )
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Returns when {{data['modelName']}} is found",
     *    @OA\JsonContent(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *       @OA\Property(property="deleted_at", type="string", example="null"),
     *       @OA\Property(property="created_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *       @OA\Property(property="updated_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *    )
     * )
     * )
     * )
     */
    public function show({{data['modelName']}} ${{data['modelVariable']}})
    {
        return ${{data['modelVariable']}};
    }
    /**
     * @OA\Post (
     * path="api/{{data['modelVariable']}}",
     * summary="Create New {{data['modelName']}}",
     * description="Create One {{data['modelName']}}",
     * operationId="postOne{{data['modelName']}}s",
     * tags={"{{data['modelVariable']}}"},
     * @OA\RequestBody(
     *    required=true,
     *    description="{{data['modelName']}} fields",
     *    @OA\JsonContent(
     *       required={"name"},
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *    ),
     * ),
     * @OA\Response(
     *    response=401,
     *    description="Returns when name or description deos'nt o the RequestBody ",
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="name and description field are required"),
     *    )
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Returns when {{data['modelName']}} has been created",
     *    @OA\JsonContent(
     *     @OA\Items(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *       @OA\Property(property="created_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *       @OA\Property(property="updated_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *    )
     * )
     * )
     * )
     */

    public function store(Request $request)
    {
        if($request->has('description') || $request->has('name')) {
            ${{data['modelVariable']}} = {{data['modelName']}}::create($request->all());
            return response()->json(${{data['modelVariable']}}, 201);
        }
        return response()->json(array("error"=>"name and description field are required"), 401);

    }
    /**
     * @OA\Put  (
     * path="api/{{data['modelVariable']}}/{id}",
     * summary="Edit one {{data['modelName']}} by id",
     * description="update One {{data['modelName']}} by id",
     * operationId="postOne{{data['modelName']}}s",
     * tags={"{{data['modelVariable']}}"},
     * @OA\Parameter(
     *    description="ID of {{data['modelVariable']}}",
     *    in="path",
     *    name="id",
     *    required=true,
     *    example="1",
     * ),
     * @OA\RequestBody(
     *    required=false,
     *    description="{{data['modelName']}} fields",
     *    @OA\JsonContent(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *    ),
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Returns when {{data['modelName']}} has been created",
     *    @OA\JsonContent(
     *     @OA\Items(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *       @OA\Property(property="created_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *       @OA\Property(property="updated_at", type="string", example="2021-03-10T09:04:27.000000Z"),
     *    )
     * )
     * )
     * )
     */

    public function update(Request $request, {{data['modelName']}} ${{data['modelVariable']}})
    {
        ${{data['modelVariable']}}->update($request->all());

        return response()->json(${{data['modelVariable']}}, 200);
    }

    /**
     * @OA\Delete (
     * path="api/{{data['modelVariable']}}/{id}",
     * summary="delete {{data['modelName']}} by id",
     * description="delete one {{data['modelName']}} by id",
     * operationId="deleteOne{{data['modelName']}}s",
     * tags={"{{data['modelVariable']}}"},
     * @OA\Parameter(
     *    description="ID of {{data['modelVariable']}}",
     *    in="path",
     *    name="id",
     *    required=true,
     *    example="1",
     * ),
     * @OA\Response(
     *    response=404,
     *    description="Returns when {{data['modelVariable']}} id is not found",
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="Resource not found"),
     *    )
     * ),
     * @OA\Response(
     *    response=200,
     *    description="Returns when {{data['modelName']}}s are found",
     *    @OA\JsonContent(
            {% for column in data['columns'] %}
     *       @OA\Property(property="{{ column['name'] }}", type="{{ column['type'] }}", example="1"),
            {% endfor %}
     *       @OA\Property(property="deleted_at", type="string", example="2021-03-10T15:47:13.000000Z"),
     *       @OA\Property(property="created_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *       @OA\Property(property="updated_at", type="string", example="2021-03-10T09:03:27.000000Z"),
     *    )
     * )
     * )
     * )
     */
    public function delete({{data['modelName']}} ${{data['modelVariable']}})
    {
        ${{data['modelVariable']}}->delete();

        return response()->json(${{data['modelVariable']}}, 200);
    }
}
